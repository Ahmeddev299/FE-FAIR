name: CI/CD Deploy Docker to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Docker Buildx for building the image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Add NEXT_PUBLIC_STAGE to .env.production
      - name: Create .env.production
        run: echo "NEXT_PUBLIC_STAGE=${{ secrets.NEXT_PUBLIC_STAGE }}" > .env.production

      # Build and save Docker image
      - name: Build and Save Docker Image
        run: |
          docker build -t ai-lease-fe .
          docker save -o ai-lease-fe.tar ai-lease-fe

      # Deploy to EC2
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          # Save SSH key to a file
          echo "$EC2_SSH_KEY" > ssh_key
          chmod 600 ssh_key

          # Copy Docker image tar to EC2
          scp -i ssh_key -o StrictHostKeyChecking=no ai-lease-fe.tar $EC2_USER@$EC2_HOST:~/ai-lease-fe.tar

          # SSH into EC2 and deploy the container
          ssh -i ssh_key -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            docker load -i ~/ai-lease-fe.tar
            docker stop ai-lease-fe || true
            docker rm ai-lease-fe || true
            docker image rm ai-lease-fe || true
            docker run -d \
              --name ai-lease-fe \
              -p 3000:3000 \
              -e NEXT_PUBLIC_STAGE=${{ secrets.NEXT_PUBLIC_STAGE }} \
              ai-lease-fe
 EOF
